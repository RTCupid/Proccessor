push 0
pop AX
push 0
pop BX
push 1
pop CX
push 0
pop DX


while:
    push 10000
    push CX
ja end:
    push AX
    push 50
    sub
    push AX
    push 50
    sub
    mul
    push BX
    push 50
    sub
    push BX
    push 50
    sub
    mul
    add

    push 2501
ja incycle:
    push 0
    pop [DX]
    jmp next:

incycle:
    push 1
    pop [DX]

next:
    push DX
    push 1
    add
    pop DX
    push CX
    push 1
    add
    pop CX
    push AX
    push 1
    add
    pop AX
call VerifyAX:

    jmp while:


end:
    draw
    hlt


VerifyAX:
    push AX
    push 101
    ja purpose:
        push 1
        pop AX
        push BX
        push 1
        add
        pop BX
    purpose:
    ret

