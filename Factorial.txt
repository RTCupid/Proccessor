;input
in
pop CX

push 1
pop  BX

push 1
pop  AX

;recursive call
call Factorial:

;output
push BX
out

hlt

Factorial:
    push AX
    push BX
    mul
    pop  BX     ;BX *= AX

    push 1
    push AX
    add
    pop  AX     ;AX++

    push AX
    push CX
    jae endif:  ;if (CX <= AX)
    ret         ;   return
    endif:
    call Factorial:
    ret
