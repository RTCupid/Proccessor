;input
in
pop CX

push 1
pop  BX

push 1
pop  AX

;recursive call
call Factorial:

;output
push BX
out

hlt

Factorial:
    push AX
    push 1
    add
    pop AX

    push CX
    push AX

    jae endif:
        call Factorial:
    endif:

    push AX
    push BX
    mul
    pop  BX     ;BX *= AX

    push AX
    push 1
    sub
    pop  AX

    ret
